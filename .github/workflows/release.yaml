name: Release app

on:
  workflow_dispatch:

jobs:

  release-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - name: Electron Forge Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # This is *extremely* silly, but this should fix an issue where
          # colorette produces a stack overflow when the error output is too
          # large. Coloring console output causes a bug because someone decided
          # to use recursion because wouldnt that be a fun idea in a language
          # without tail call optimization. I love the js ecosystem.
          NO_COLOR: true
        run: npm run publish
      - name: Rename Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node .github/util-scripts/rename-release-assets.js

  release-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm ci
      - name: Electron Forge Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NO_COLOR: true
        run: npm run publish
      - name: Rename Artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node .github/util-scripts/rename-release-assets.js
